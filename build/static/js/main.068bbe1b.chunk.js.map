{"version":3,"sources":["App.js","index.js"],"names":["mapboxgl","accessToken","App","React","PureComponent","constructor","props","super","this","state","lng","lat","zoom","mapContainer","createRef","componentDidMount","map","Map","container","current","style","center","onLoad","cb","loaded","areTilesLoaded","isStyleLoaded","console","log","once","params","window","location","search","slice","split","p","reduce","obj","key","value","async","resp","fetch","url","json","loadData","then","ready","on","addSource","type","data","addLayer","id","source","layout","paint","fill","parseFloat","bounds","turf","fitBounds","padding","duration","setTimeout","Div","document","createElement","getElementsByClassName","appendChild","postDiv","render","ref","className","ReactDOM","StrictMode","getElementById"],"mappings":"qMAKAA,IAASC,YACL,iGAEW,MAAMC,UAAYC,IAAMC,cACrCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CACXC,KAAM,kBACNC,IAAK,kBACLC,KAAM,KAERJ,KAAKK,aAAeV,IAAMW,YAG5BC,oBACE,MAAM,IAAEL,EAAF,IAAOC,EAAP,KAAYC,GAASJ,KAAKC,MAC1BO,EAAM,IAAIhB,IAASiB,IAAI,CAC3BC,UAAWV,KAAKK,aAAaM,QAC7BC,MAAO,wDACPC,OAAQ,CAACX,EAAKC,GACdC,KAAMA,IAGRI,EAAIM,OAAS,SAASC,GAUpB,OATKP,EAAIQ,SACLD,IACQP,EAAIS,iBAEJT,EAAIU,gBAGZC,QAAQC,IAAI,iDAFZZ,EAAIa,KAAK,YAAaN,GAFtBP,EAAIa,KAAK,OAAQN,GAMdP,GAGT,MAAMc,EAASC,OAAOC,SAASC,OAC9BC,MAAM,GACNC,MAAM,KACNnB,KAAKoB,GAAMA,EAAED,MAAM,OACnBE,QAAO,CAACC,GAAMC,EAAKC,MAAZ,IAA6BF,EAAK,CAACC,GAAMC,KAAU,IAE3Db,QAAQC,IAAIE,IAUZW,iBACE,MAAMC,QAAaC,MAAMb,EAAOc,KAEhC,aADmBF,EAAKG,QAI1BC,GAAWC,MAAKF,IACd,IAGiBtB,EAHbyB,GAAQ,EACZhC,EAAIiC,GAAG,QAAQ,WAAcD,GAAQ,KAEpBzB,EAQT,KACNP,EAAIkC,UAAU,YAAa,CACzBC,KAAM,UACNC,KAAMP,IAIR7B,EAAIqC,SAAS,CACXC,GAAI,kBACJH,KAAM,OACNI,OAAQ,YACRC,OAAQ,GACRC,MAAO,CACL,aAAe,IAAG3B,EAAO4B,OACzB,eAAgBC,WAAW7B,EAAO,oBAItCd,EAAIqC,SAAS,CACXC,GAAI,UACJH,KAAM,OACNI,OAAQ,YACRC,OAAQ,GACRC,MAAO,CACL,aAAe,IAAG3B,EAAO4B,OACzB,aAAc,KAIlB,MAAME,EAASC,OAAUhB,GACzB7B,EAAI8C,UAAUF,EAAQ,CAAEG,QAAS,IAAKC,SAAU,IAChDC,YAAW,WACTtC,QAAQC,IAAI,cA1DF,MACdD,QAAQC,IAAI,UAEZ,MAAMsC,EAAMC,SAASC,cAAc,OACnCF,EAAIZ,GAAK,SACTa,SAASE,uBAAuB,iBAAiB,GAAGC,YAAYJ,IAsD5DK,KACC,MAzCIvB,EACDzB,IAEAP,EAAIiC,GAAG,OAAQ1B,MA6C3BiD,SACE,OACE,8BACE,qBAAKC,IAAKjE,KAAKK,aAAc6D,UAAU,qBCjH/CC,IAASH,OACT,cAAC,IAAMI,WAAP,UACA,cAAC,EAAD,MAEAT,SAASU,eAAe,U","file":"static/js/main.068bbe1b.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\nimport * as turf from '@turf/turf';\n\nmapboxgl.accessToken =\n    'pk.eyJ1IjoiY2FzZXltbWlsZXIiLCJhIjoiY2lpeHY1bnJ1MDAyOHVkbHpucnB1dGRmbyJ9.TzUoCLwyeDoLjh3tkDSD4w';\n\nexport default class App extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: -98.78320225360663,\n      lat: 40.45646421496375, \n      zoom: 3.5\n    };\n    this.mapContainer = React.createRef();\n  }\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer.current,\n      style: 'mapbox://styles/caseymmiler/cktf3jdcs2ws819qttibvokom',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    map.onLoad = function(cb) {\n      if  (map.loaded()) {\n          cb();\n      } else if (!map.areTilesLoaded()) {\n          map.once('data', cb);\n      } else if (!map.isStyleLoaded()) {\n          map.once('styledata', cb);\n      } else {\n          console.log(\"Map is not ready but is not not-ready either.\");\n      }\n      return map;\n  };\n\n    const params = window.location.search\n    .slice(1)\n    .split('&')\n    .map((p) => p.split('='))\n    .reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {});\n\n    console.log(params);\n\n    const postDiv = () => {\n      console.log('loaded')\n      // signal done\n      const Div = document.createElement('div');\n      Div.id = 'hidden';\n      document.getElementsByClassName('map-container')[0].appendChild(Div);\n    }\n\n    async function loadData() {\n      const resp = await fetch(params.url);\n      const json = await resp.json();\n      return json;\n    }\n\n    loadData().then(json => {\n      var ready = false;\n      map.on('load', function () { ready = true; });\n\n      function onReady(cb) {\n          if  (ready) {\n              cb();\n          } else {\n              map.on('load', cb);\n          }\n      }\n\n      onReady(() => {\n        map.addSource('data-json', {\n          type: 'geojson',\n          data: json,\n        });\n  \n        // Add a new layer to visualize the polygon.\n        map.addLayer({\n          id: 'data-json-layer',\n          type: 'fill',\n          source: 'data-json', // reference the data source\n          layout: {},\n          paint: {\n            'fill-color': `#${params.fill}`,\n            'fill-opacity': parseFloat(params['fill-opacity']),\n          },\n        });\n        \n        map.addLayer({\n          id: 'outline',\n          type: 'line',\n          source: 'data-json',\n          layout: {},\n          paint: {\n            'line-color': `#${params.fill}`,\n            'line-width': 2,\n          },\n        });\n      \n        const bounds = turf.bbox(json);\n        map.fitBounds(bounds, { padding: 100, duration: 0 });\n        setTimeout(function(){\n          console.log('brb crying');\n          postDiv();\n        }, 3000)\n        \n      })\n\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div ref={this.mapContainer} className=\"map-container\" />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './index.css';\nimport App from './App';\n \nReactDOM.render(\n<React.StrictMode>\n<App />\n</React.StrictMode>,\ndocument.getElementById('root')\n);"],"sourceRoot":""}